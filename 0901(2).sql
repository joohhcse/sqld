
--Connection : JSP //

SELECT * FROM EMP;

SELECT JOB, DEPTNO
FROM EMP
GROUP BY ROLLUP(JOB, DEPTNO);


SELECT JOB, DEPTNO
FROM EMP
GROUP BY ROLLUP(DEPTNO, JOB);


SELECT JOB, DEPTNO
FROM EMP
GROUP BY CUBE(JOB, DEPTNO)
ORDER BY DEPTNO DESC
;

SELECT JOB, DEPTNO
FROM EMP
GROUP BY CUBE(DEPTNO, JOB);

-----------------------------------
--WINDOW function--

SELECT * FROM EMP;

SELECT EMPNO, ENAME, SAL,
    SUM(SAL) OVER(ORDER BY SAL
    ROWS BETWEEN UNBOUNDED PRECEDING
    AND UNBOUNDED FOLLOWING) TOTSAL
FROM EMP;

--WINDOWING
SELECT EMPNO, ENAME, SAL,
    SUM(DEPTNO) OVER(ORDER BY SAL
    ROWS BETWEEN UNBOUNDED PRECEDING
    AND UNBOUNDED FOLLOWING) TOTSAL
FROM EMP;

--RANK FUNCTION -- RANK / DENSE_RANK / ROW_NUMBER

SELECT ENAME, SAL,
    RANK() OVER(ORDER BY SAL DESC) ALL_RANK,
    RANK() OVER(PARTITION BY JOB ORDER BY SAL DESC) JOB_RANK
FROM EMP;

SELECT EMP.*,
    RANK() OVER(PARTITION BY JOB ORDER BY SAL DESC) JOB_RANK
FROM EMP;

--비율관련함수
--PERCENT_RANK
SELECT DEPTNO, ENAME, SAL,
    NTILE(4) OVER(ORDER BY SAL DESC) AS N_TILE,
    PERCENT_RANK() OVER(PARTITION BY DEPTNO ORDER BY SAL DESC) AS PERCENT_SAL,
    RATIO_TO_REPORT(SAL) OVER(PARTITION BY DEPTNO) AS RATIO_TO_REPORT,
    CUME_DIST() OVER(PARTITION BY DEPTNO ORDER BY SAL DESC) AS CUME_DIST
FROM EMP
ORDER BY SAL DESC
;

--NTILE
SELECT DEPTNO, ENAME, SAL, NTILE(4) OVER(ORDER BY SAL DESC) AS N_TILE
FROM EMP;



SELECT JOB, SAL
FROM EMP
GROUP BY JOB, SAL
;

SELECT MIN(SAL)
FROM EMP
HAVING AVG(SAL) > 1000 
;

SELECT JOB, SAL, AVG(SAL), COUNT(*) 
FROM EMP
GROUP BY JOB, SAL;




